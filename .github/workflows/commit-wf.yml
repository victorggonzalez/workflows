name: Test commit action

on:
  workflow_dispatch:
jobs:
  generate-dir:
    name: Generate dir
    runs-on: ubuntu-latest
    outputs:
      commit-hash: ${{ steps.commit.outputs.commit_hash }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: create dir
      id: create
      run: |
        echo 'Hello, world' > foo.txt
        git status

    - name: Commit step
      id: commit
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: First commit

    - name: "Run if changes have been detected"
      if: steps.commit.outputs.changes_detected == 'true'
      run: echo "Changes!"

    - name: "Run if no changes have been detected"
      if: steps.commit.outputs.changes_detected == 'false'
      run: echo "No Changes!"

    - name: Set commit hash output
      run: |
        echo ${{ steps.commit.outputs.commit_hash }}
        echo ::set-output name=commit-hash::${{ steps.commit.outputs.commit_hash }}

  promote:
    name: Promote stack to release ready
    needs: generate-dir
    runs-on: ubuntu-latest
    steps:
    - name: echo
      run: |
        echo ${{ needs.generate-dir.outputs.commit-hash }}

    - name: Check out code
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.generate-dir.outputs.commit-hash }}

    - name: echo
      run: |
        git branch tmp
        git checkout main
        git merge tmp

    - name: Commit step
      id: commit
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Second commit

    - name: "Run if changes have been detected"
      if: steps.commit.outputs.changes_detected == 'true'
      run: echo "Changes!"

    - name: "Run if no changes have been detected"
      if: steps.commit.outputs.changes_detected == 'false'
      run: echo "No Changes!"

    - name: Set commit hash output
      run: |
        echo ${{ steps.commit.outputs.commit_hash }}
