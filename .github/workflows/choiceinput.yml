# This workflow triggers a new workflow inside the graasp-deploy repository. It passes a json 
# with the repository name and the latest tag pushed from the caller repository. 
name: Choice input

# Controls when the action will run
on:
  # Allow the workflow to be manually triggered
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      release-type:
        # Description to be shown in the UI instead of 'stack'
        description: 'Select a release type'
        # Default value if no value is explicitly provided
        # Input does not have to be provided for the workflow to run
        type: choice
        options: 
        - first
        - patch        
        - minor        
        - major
        default: patch
        required: true
      test-execution:
        type: boolean
        default: true
        description: 'Execute test job (Default: yes)'
# Set environment variables that are available to the steps of all jobs in the workflow
env:
  SHOULD_DEPLOY: ${{ (github.event_name == 'workflow_dispatch') || (github.ref_name == 'main') || (github.ref_name == 'master') }}

# This workflow is made up of one job that calls the reusable workflow in graasp-deploy
jobs:
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Check-out repository under $GITHUB_WORKSPACE, so the job can access it
    - name: Check out code
      uses: actions/checkout@v3
  test:
    name: Test
    needs: build
    if: inputs.test-execution == true
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Check-out repository under $GITHUB_WORKSPACE, so the job can access it
    - name: Check out code
      uses: actions/checkout@v3

  deploy:
    # Replace with repository name
    name: Deploy
    needs: [build, test]
    if: ${{ env.SHOULD_DEPLOY }}
    runs-on: ubuntu-latest
    steps:
    - name: Echo release type
      env: 
        RELEASE_TYPE: ${{ inputs.release-type }}
      run: |
        echo $RELEASE_TYPE
        echo $SHOULD_DEPLOY
