name: CI - Integration Test 

# Controls when the action will run. 
# Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  # Allow the workflow to be reusable
  workflow_call:
  schedule:
    - cron: '0 8 * * *'

env:        
  PASSWORD: ${{ secrets.STAGING_PASSWORD }}
  EMAIL: ${{ secrets.STAGING_EMAIL }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # api-test:
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #   - name: Git checkout 
  #     uses: actions/checkout@v2

  #   - name: Setup node
  #     id: setup-node
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '16'
  #       check-latest: true

  #   - name: Setup runner
  #     id: setup-runner
  #     run: |
  #       npm install newman newman-reporter-htmlextra

  #   - name: Setup environment secrets
  #     id: setup-secrets
  #     run: |
  #       cat postman/postman_environment.json | jq -r --arg password "$PASSWORD" --arg email "$EMAIL" \
  #       '.values[0].value |= $password | .values[1].value|= $email' > postman/staging.postman_environment.json
  #   - name: Run newman
  #     id: newman
  #     run: |
  #       FILE_NAME=$(echo "`date +"%Y-%m-%d-%H-%M"`"-collection-run.html)
  #       echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
  #       node_modules/newman/bin/newman.js run postman/GraaspAPITest.postman_collection.json -e postman/staging.postman_environment.json -r cli,htmlextra --reporter-htmlextra-export ./newman/$FILE_NAME

  #   - name: Commit step
  #     id: commit
  #     if: always()
  #     uses: stefanzweifel/git-auto-commit-action@v4
  #     with:
  #       commit_message: 'test commit'
  #       file_pattern: newman/*
  #       branch: gh-pages

  #   - name: Generate job summary markdown
  #     env:
  #       FILE_NAME: ${{ env.FILE_NAME }}
  #     if: always()
  #     run: |
  #       echo '[See summary in github pages](https://victorggonzalez.github.io/workflows/newman/${{ env.FILE_NAME }})' >> $GITHUB_STEP_SUMMARY
  
  smoke-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Check-out repository under $GITHUB_WORKSPACE, so the job can access it
    - name: Git checkout 
      uses: actions/checkout@v2

    # Download and cache distribution of the requested Node.js version, and add it to the PATH
    - name: Setup node
      id: setup-node
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        check-latest: true

    # Setup the runner with the appropriate packages
    - name: Setup runner
      id: setup-runner
      run: |
        npm install newman newman-reporter-htmlextra

    #   # Set environment variables required to perform the tests
    # - name: Setup environment secrets
    #   id: setup-secrets
    #   run: |
        cat postman/postman_environment.json | jq -r --arg password "$PASSWORD" --arg email "$EMAIL" --arg host "$HOST" \
        '.values[0].value |= $password | .values[1].value|= $email | .values[2].value|= $host' > postman/staging.postman_environment.json

    # Run a set of commands using the runners shell to perform tests
    - name: Run newman
      id: newman
      run: |
        FILE_NAME=$(echo "`date +"%Y-%m-%d-%H-%M"`"-smoke-test-run.html)
        echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
        node_modules/newman/bin/newman.js run postman/GraaspSmokeTest.postman_collection.json -e postman/staging.postman_environment.json -r htmlextra --reporter-htmlextra-export ./newman/$FILE_NAME

    - name: Commit step
      id: commit
      if: always()
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'test commit'
        branch: gh-pages
        file_pattern: newman/*

    - name: Generate job summary markdown
      env:
        FILE_NAME: ${{ env.FILE_NAME }}
      if: always()
      run: |
        echo '[See summary in github pages](https://graasp.github.io/graasp-deploy/newman/${{ env.FILE_NAME }})' >> $GITHUB_STEP_SUMMARY
