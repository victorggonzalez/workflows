name: Cypress cache test
on:
  # Allow the workflow to be reusable
  workflow_call:
  # Allow the workflow to be manually triggered
  workflow_dispatch:

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Download and cache distribution of the requested Node.js version, and add it to the PATH
      - name: Setup node
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          check-latest: true

      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v3
        env:
          cache-name: deps
        with:
            path: 'result/node_modules'
            key: ${{ runner.os }}-modules-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-modules-${{ env.cache-name }}-
              ${{ runner.os }}-modules-
              ${{ runner.os }}-

      - name: Cache Cypress Binary
        id: cache-cypress-binary
        uses: actions/cache@v3
        with:
          path: '~/.cache/Cypress'
          key: ${{ runner.os }}-cypress-binary-${{ github.ref_name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
              ${{ runner.os }}-cypress-binary-${{ github.ref_name }}-
              ${{ runner.os }}-cypress-binary-

      - name: Install a
        id: a
        env:
          OUTPUT: ${{ steps.cache-deps.outputs.cache-hit }}
        if: (steps.cache-deps.outputs.cache-hit == 'true') || (steps.cache-cypress-binary.outputs.cache-hit == 'true')
        run: echo $OUTPUT
      - name: Install b
        id: b
        env:
          OUTPUT: ${{ steps.cache-deps.outputs.cache-hit }}
        if: (steps.cache-deps.outputs.cache-hit != 'true') || (steps.cache-cypress-binary.outputs.cache-hit == 'true')
        run: echo $OUTPUT
      - name: Install c
        id: c
        env:
          OUTPUT: ${{ steps.cache-deps.outputs.cache-hit }}
        if: (steps.cache-deps.outputs.cache-hit == 'true') || (steps.cache-cypress-binary.outputs.cache-hit != 'true')
        run: echo $OUTPUT
      - name: Install d
        id: d
        env:
          OUTPUT: ${{ steps.cache-deps.outputs.cache-hit }}
        if: (steps.cache-deps.outputs.cache-hit != 'true') || (steps.cache-cypress-binary.outputs.cache-hit != 'true')
        run: echo $OUTPUT


        # # Install NPM dependencies, cache them correctly
        # # and run all Cypress tests
        # - name: Cypress run
        #   uses: cypress-io/github-action@v4
        #   with:
        #     install: false
        #     browser: chrome
        #     headed: true
        #   env:
        #     TEST_EMAIL: ${{secrets.TEST_EMAIL}}
        #     TEST_PASSWORD: ${{secrets.TEST_PASSWORD}}
        #     REACT_APP_GRAASP_PERFORM_HOST_STAGE: ${{secrets.REACT_APP_GRAASP_PERFORM_HOST_STAGE}}
        #     REACT_APP_GRAASP_COMPOSE_HOST_STAGE: ${{secrets.REACT_APP_GRAASP_COMPOSE_HOST_STAGE}}
        #     REACT_APP_GRAASP_EXPLORE_HOST_STAGE: ${{secrets.REACT_APP_GRAASP_EXPLORE_HOST_STAGE}}
        #     REACT_APP_AUTHENTICATION_HOST_STAGE: ${{secrets.REACT_APP_AUTHENTICATION_HOST_STAGE}}
